
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9aO\x0e\x92\xe4\xf8\x14)\x1b\xf5i\xd3WdP\xb4'
    
_lr_action_items = {'rbrack':([15,23,37,],[24,31,39,]),'string':([6,26,27,],[12,12,12,]),'point':([0,2,22,],[1,1,-10,]),'float':([6,26,27,],[14,14,14,]),'lkey':([10,],[21,]),'lbrack':([6,26,27,],[15,15,15,]),'rkey':([21,28,29,30,35,38,],[-21,-21,-6,36,-5,-7,]),'comma':([12,14,16,17,18,24,25,31,39,],[-17,-16,26,-15,-14,-20,32,-19,-18,]),'point_comma':([6,12,13,14,16,17,18,19,24,27,31,33,34,39,],[-21,-17,22,-16,-12,-15,-14,-13,-20,-21,-19,-11,38,-18,]),'integer':([6,15,26,27,32,],[17,23,17,17,37,]),'id':([0,1,2,3,5,6,7,8,15,21,22,26,27,28,36,38,],[-21,6,-21,10,-9,18,-8,10,25,27,-10,18,18,27,-4,-7,]),'$end':([0,2,3,4,5,7,8,9,11,20,22,36,],[-21,-21,-21,0,-9,-8,-21,-1,-3,-2,-10,-4,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'operands':([6,27,],[13,34,]),'headers':([0,2,],[3,7,]),'header':([0,2,],[2,2,]),'program':([0,],[4,]),'empty':([0,2,3,6,8,21,27,28,],[5,5,11,19,11,29,19,29,]),'operand':([6,26,27,],[16,33,16,]),'procedures':([3,8,],[9,20,]),'instruc':([21,28,],[28,28,]),'procedure':([3,8,],[8,8,]),'instructions':([21,28,],[30,35,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> headers procedures','program',2,'p_program','/home/eduardo/.hasm/core/compiler.py',13),
  ('procedures -> procedure procedures','procedures',2,'p_procedures','/home/eduardo/.hasm/core/compiler.py',16),
  ('procedures -> empty','procedures',1,'p_procedures','/home/eduardo/.hasm/core/compiler.py',17),
  ('procedure -> id lkey instructions rkey','procedure',4,'p_procedure','/home/eduardo/.hasm/core/compiler.py',20),
  ('instructions -> instruc instructions','instructions',2,'p_instructions','/home/eduardo/.hasm/core/compiler.py',28),
  ('instructions -> empty','instructions',1,'p_instructions','/home/eduardo/.hasm/core/compiler.py',29),
  ('instruc -> id operands point_comma','instruc',3,'p_instruc','/home/eduardo/.hasm/core/compiler.py',32),
  ('headers -> header headers','headers',2,'p_headers','/home/eduardo/.hasm/core/compiler.py',43),
  ('headers -> empty','headers',1,'p_headers','/home/eduardo/.hasm/core/compiler.py',44),
  ('header -> point id operands point_comma','header',4,'p_header','/home/eduardo/.hasm/core/compiler.py',47),
  ('operands -> operand comma operand','operands',3,'p_operands_double','/home/eduardo/.hasm/core/compiler.py',58),
  ('operands -> operand','operands',1,'p_operands_single','/home/eduardo/.hasm/core/compiler.py',62),
  ('operands -> empty','operands',1,'p_operands_empty','/home/eduardo/.hasm/core/compiler.py',66),
  ('operand -> id','operand',1,'p_operand_id','/home/eduardo/.hasm/core/compiler.py',70),
  ('operand -> integer','operand',1,'p_operand_int','/home/eduardo/.hasm/core/compiler.py',78),
  ('operand -> float','operand',1,'p_operand_float','/home/eduardo/.hasm/core/compiler.py',86),
  ('operand -> string','operand',1,'p_operand_string','/home/eduardo/.hasm/core/compiler.py',94),
  ('operand -> lbrack id comma integer rbrack','operand',5,'p_operand_array_pointer','/home/eduardo/.hasm/core/compiler.py',102),
  ('operand -> lbrack integer rbrack','operand',3,'p_operand_array_with_lenght','/home/eduardo/.hasm/core/compiler.py',111),
  ('operand -> lbrack rbrack','operand',2,'p_operand_array','/home/eduardo/.hasm/core/compiler.py',119),
  ('empty -> <empty>','empty',0,'p_empty','/home/eduardo/.hasm/core/compiler.py',127),
]
